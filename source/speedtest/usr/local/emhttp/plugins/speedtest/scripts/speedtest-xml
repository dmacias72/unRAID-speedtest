#!/usr/bin/php -q
<?
$debug = FALSE;
$prog  = pathinfo(__FILE__, PATHINFO_FILENAME);
$usage = <<<EOF

Test internet bandwidth and log results in xml format in situations
where you don't have access to a full GUI environment and web browser.

Usage: speedtest-xml [options]

  -q, --quiet      suppress all packages progress
      --verbose    print all packages progress
      --help       display this help and exit
      --version    output version information and exit
      --debug      turn on debugging

EOF;

$shortopts = "q";
$longopts = [
    "help",
    "quiet",
    "verbose",
    "version"
];

$args = getopt($shortopts, $longopts);

if (array_key_exists("help", $args)) {
    echo $usage;
    exit(1);
}

if (array_key_exists("version", $args)) {
    echo "Speedtest XML Version: 1.0\n";
    exit(1);
}

$argq = (array_key_exists("q", $args) || array_key_exists("quiet", $args));
$argv = (array_key_exists("v", $args) || array_key_exists("verbose", $args));
$debug = array_key_exists("debug", $args);

require_once("/usr/local/emhttp/plugins/speedtest/include/parse_cfg.php");

/* debug */
function debug($m){
  global $prog, $debug;
  if($debug){
    $STDERR = fopen('php://stderr', 'w+');
    fwrite($STDERR, $m.PHP_EOL);
    fclose($STDERR);
  }
}

echo "Internet bandwidth test started\n\n";
shell_exec("echo -e 'Internet bandwidth test started' | logger -tspeedtest");

$xml = simplexml_load_file($speedtest_filename);
$test = $xml->addChild('test');
$test->addAttribute('name', round(microtime(true) * 1000));

$options = '';
if ( $speedtest_list == 'manual')
    $options .= " --server $speedtest_server";
if ($speedtest_secure == 'secure')
    $options .= ' --secure';
if ($speedtest_share == 'share')
    $options .= ' --share';
if ($speedtest_units == 'bytes')
        $options .= ' --bytes';
if ($speedtest_version != '0.3.1')
        $options .= " --timeout $speedtest_timeout";

$cmd = "/usr/bin/python /usr/local/emhttp/plugins/speedtest/scripts/speedtest-${speedtest_version}.py  $options  2>/dev/null";
$handle = popen($cmd, 'r');

ob_start();
$results = '';
while(!feof($handle)) {
    $buffer = trim(fgets($handle));
    $msg = "$buffer\n\n";
    $output = explode(": ", $buffer);
    if ((strpos($output[0], 'Hosted by')) !== false) {
        $host = substr($output[0],10);
        $test->addAttribute('host', $host);
        $test->addAttribute('ping', $output[1]);
        $result .= 'Ping (Lowest): '.$output[1];
        $msg .= "Testing download speed...\n\n";
    }elseif ((strpos($buffer, 'Download')) !== false) {
        $test->addAttribute('download', $output[1]);
        $result .= ' | Download (Max): '.$output[1];
        $msg .= "Testing upload speed...\n\n";
    }elseif ((strpos($buffer, 'Upload')) !== false) {
        $test->addAttribute('upload', $output[1]);
        $result .= ' | Upload (Max): '.$output[1];
    }elseif ((strpos($buffer, "Share results")) !== false) {
        $test->addAttribute('share', $output[1]);
    }elseif (((strpos($buffer, 'Testing download')) !== false) || ((strpos($buffer, 'Testing upload')) !== false)) {
        $msg = "";}
    echo "$msg";

    ob_flush();
}


pclose($handle);

ob_end_flush();

$xml->asXML($speedtest_filename);

shell_exec("echo -e 'Host: ${host}' | logger -tspeedtest");

shell_exec("echo -e '${result}' | logger -tspeedtest");

shell_exec("echo -e 'Internet bandwidth test completed' | logger -tspeedtest");
?>
