Menu="SpeedtestSettingsTabs:1"
Title="Speedtest"
---
<?
require_once '/usr/local/emhttp/plugins/speedtest/include/parse_cfg.php';
require_once '/usr/local/emhttp/plugins/speedtest/include/scheduler_tab.php';
?>

<form markdown="1" name="speedtest_settings" method="POST" action="/update.php" target="progressFrame">
<input type="hidden" name="#file" value="speedtest/speedtest.cfg" />

> Settings for speedtest plugin. History tab takes you to the results page where you can view
> a history of speed tests and charts.  Scheduler tab takes you to the Speedtest scheduler to
> choose the interval for how often Speedtest will run, it runs in the background.

Speedtest Script Version:
: <select id="VERSION" name="VERSION" size="1" >
    <?=mk_option($speedtest_version, "latest", "latest");?>
    <?=mk_option($speedtest_version, "1.0.3", "v1.0.3");?>
    <?=mk_option($speedtest_version, "1.0.2", "v1.0.2");?>
    <?=mk_option($speedtest_version, "1.0.1", "v1.0.1");?>
    <?=mk_option($speedtest_version, "1.0.0", "v1.0.0");?>
    <?=mk_option($speedtest_version, "0.3.4", "v0.3.4");?>
    <?=mk_option($speedtest_version, "0.3.1", "v0.3.1");?>
  </select>

> Choose a version of speedtest script to use.

Speedtest Timeout in Seconds:
: <select id="TIMEOUT" name="TIMEOUT" size="1" class="speedtest-cli">
    <?=mk_option($speedtest_timeout, "10", "10");?>
    <?=mk_option($speedtest_timeout, "20", "20");?>
    <?=mk_option($speedtest_timeout, "30", "30");?>
    <?=mk_option($speedtest_timeout, "30", "60");?>
  </select>

> Choose a HTTP timeout of speedtest in seconds.

Enable Secure Connection:
: <select id="SECURE" name="SECURE" size="1" class="speedtest-cli">
      <?=mk_option($speedtest_secure, "no", "No");?>
      <?=mk_option($speedtest_secure, "secure", "Yes");?>
  </select>

> Choose to use an ssl connection to speedtest server.
>
> Yes to use secure server.  May affect results of tests.


 Save Speed Values As:
: <select id="UNITS" name="UNITS" size="1" class="speedtest-cli">
      <?=mk_option($speedtest_units, "bits", "bits");?>
      <?=mk_option($speedtest_units, "bytes", "bytes");?>
  </select>

> Choose the units to use for saved speedtest results.
>
> bits or bytes.  Only affects saved table data. Speedtest image will always be in bits.


Create Results Image:
: <select id="SHARE" name="SHARE" size="1" class="speedtest-cli">
      <?=mk_option($speedtest_share, "no", "No");?>
      <?=mk_option($speedtest_share, "share", "Yes");?>
  </select>

> Choose to create a speedtest image when running tests.
>
> Yes to create an image and store in table.


Select Speedtest Server:
: <select id="LIST" name="LIST" size="1">
  <?=mk_option($speedtest_list, "auto", "Auto");?>
  <?=mk_option($speedtest_list, "manual", "Manual");?>
  </select>

> Choose a specific server to run tests against
>
> Auto picks closest server for you.


&nbsp;
: <select class="serverlist" id="SERVER" name="SERVER" size="1">
        <option value="0"> ...loading speedtest.net server list </option>
  </select>

<input id="DEFAULT" type="submit" value="Default">
: <input id="btnApply" type="submit" value="Apply" ><input type="button" value="Done" onClick="done()">

> Default button resets settings to default values.

&nbsp;

</form>

<script>
$(function(){
    // append tabs for History and Scheduler
    $('.tabs')
        .append('<div class="tab"><input type="radio" name="tabs2" id="tab3"><label for="tab3"><img class="icon" src="/plugins/speedtest/icons/history.png">History</label></div>')
        .append('<div class="tab"><input type="radio" name="tabs2" id="tab4"><label for="tab4"><img class="icon" src="/plugins/speedtest/icons/scheduler.png">Scheduler</label></div>');

    // dynamix plugin update api
    <?if (function_exists('plugin_update_available') && $version = plugin_update_available('speedtest')):?>
        showNotice('Speedtest <?=htmlspecialchars($version);?> available. <a>Update</a>','speedtest');
        $('#user-notice a').on('click', function () {
            $('#user-notice').empty();
        });
    <?endif;?>

    // hide dummy tab
    $('#tab2').parent().hide();

    // goto Speedtest Tools Menu
    $('#tab3').click(function() {
        $.cookie('one', 'tab1', { expires:null, path: '/'});
        location = '/Tools/SpeedtestTools';
    });

    // goto scheduler tab
    $('#tab4').click(function() {
        $.cookie('one', "<?='tab'.intval($scheduler_tab);?>", { expires:null, path: '/'});
        location = '/Settings/Scheduler';
    });

    var Selected = "<?=$speedtest_server;?>";

    $('#LIST').change(function () {
        if ($('#LIST')[0].selectedIndex){
            $('.serverlist').css('visibility','visible')
            getServerList(Selected);
        }else
            $('.serverlist').css('visibility','hidden')
    });


    if ($('#LIST')[0].selectedIndex){
        $('.serverlist').css('visibility','visible')
            getServerList(Selected);
    }else
        $('.serverlist').css('visibility','hidden')

    $('#VERSION').change(function () {
        $('.speedtest-cli').prop('disabled', $('#VERSION')[0].selectedIndex == ($('#VERSION')[0].length - 1));
    });

    if ($('#VERSION')[0].selectedIndex == $('#VERSION')[0].length - 1){
            $('.speedtest-cli').prop('disabled', true);
    }else
            $('.speedtest-cli').prop('disabled', false)

    $('#DEFAULT').on('click', resetDATA);

});

function resetDATA() {
    $('#VERSION').val('latest');
    $('#TIMEOUT').val(10);
    $('#SECURE').val('no');
    $('#SHARE').val('--share');
    $('#UNITS').val('bits');
    $('#LIST').val('auto');
    $('#SERVER').val(0);
}

// list all available servers
function getServerList(Select){
    $.getJSON('/plugins/speedtest/include/speedtest-list.php', {select: Select}, function(Options) {
        $('#SERVER').html(Options);
    });
}
</script>